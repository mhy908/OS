Kernel command line: -q run priority-donate-one
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
Boot complete.
Executing 'priority-donate-one':
(priority-donate-one) begin
(priority-donate-one) This thread should have priority 32.  Actual priority: 31.
(priority-donate-one) This thread should have priority 33.  Actual priority: 31.
(priority-donate-one) acquire1: got the lock
(priority-donate-one) acquire2: got the lock
Kernel PANIC at ../../threads/thread.c:266 in thread_unblock(): assertion `t->status == THREAD_BLOCKED' failed.
Call stack: 0x8004213824 0x8004206e3d 0x8004209a71 0x800420a2b7 0x8004217e9e 0x800420724c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 42 ticks
Thread: 0 idle ticks, 42 kernel ticks, 0 user ticks
Console: 